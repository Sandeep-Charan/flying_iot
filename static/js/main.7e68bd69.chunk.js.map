{"version":3,"sources":["components/DisplayMapClass.js","App.js","reportWebVitals.js","index.js"],"names":["wp_arr","DisplayMapClass","mapRef","React","state","map","H","window","defaultLayers","service","Platform","apikey","createDefaultLayers","Map","this","current","vector","normal","center","lat","lng","zoom","pixelRatio","devicePixelRatio","mapevents","Behavior","MapEvents","ui","UI","createDefault","setCenter","addEventListener","evt","coord","screenToGeo","currentPointer","viewportX","viewportY","push","Math","abs","toFixed","console","log","coords","Marker","addObject","addMarkersToMap","setUpClickListener","setState","dispose","ref","style","height","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGIA,EAAO,GACEC,EAAb,4MACIC,OAASC,cADb,EAEIC,MAAQ,CACNC,IAAK,MAHX,kEAOM,IAAMC,EAAIC,OAAOD,EAMXE,EALW,IAAIF,EAAEG,QAAQC,SAAS,CACpCC,OAAQ,gDAImBC,sBAEzBP,EAAM,IAAIC,EAAEO,IAChBC,KAAKZ,OAAOa,QACZP,EAAcQ,OAAOC,OAAOZ,IAC5B,CACEa,OAAQ,CAAEC,IAAK,GAAIC,IAAK,GACxBC,KAAM,EACNC,WAAYf,OAAOgB,kBAAoB,IAO1B,IAAIjB,EAAEkB,UAAUC,SAAS,IAAInB,EAAEkB,UAAUE,UAAUrB,IAIzDC,EAAEqB,GAAGC,GAAGC,cAAcxB,EAAKG,GACtCH,EAAIyB,UAAU,CAACX,IAAI,QAASC,IAAI,UAKhC,SAA4Bf,GAG1BA,EAAI0B,iBAAiB,OAAO,SAAUC,GACpC,IAAIC,EAAQ5B,EAAI6B,YAAYF,EAAIG,eAAeC,UACvCJ,EAAIG,eAAeE,WACvBrC,EAAOsC,KAAK,CAAC,SAAYC,KAAKC,IAAIP,EAAMd,IAAIsB,QAAQ,KAClDR,EAAMd,IAAM,EAAK,IAAM,KACzB,UAAaoB,KAAKC,IAAIP,EAAMb,IAAIqB,QAAQ,KACrCR,EAAMb,IAAM,EAAK,IAAM,OAC9BsB,QAAQC,IAAI3C,GAdhB,SAAyBK,EAAIuC,GAC3B,IAAIC,EAAS,IAAIvC,EAAED,IAAIwC,OAAO,CAAC1B,IAAIyB,EAAOzB,IAAIsB,QAAQ,GAAIrB,IAAIwB,EAAOxB,IAAIqB,QAAQ,KACjFpC,EAAIyC,UAAUD,GAaZE,CAAgB1C,EAAI4B,MAKxBe,CAAmB3C,GAMnBS,KAAKmC,SAAS,CAAE5C,UA5DtB,6CAgEMS,KAAKV,MAAMC,IAAI6C,YAhErB,+BAoEM,OAAO,qBAAKC,IAAKrC,KAAKZ,OAAQkD,MAAO,CAAEC,OAAQ,eApErD,GAAqClD,aCMtBmD,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e68bd69.chunk.js","sourcesContent":["// src/DisplayMapClass.js\r\nimport * as React from 'react';\r\n\r\nvar wp_arr=[];\r\nexport class DisplayMapClass extends React.Component {\r\n    mapRef = React.createRef();\r\n    state = {\r\n      map: null\r\n    };\r\n  \r\n    componentDidMount() {\r\n      const H = window.H;\r\n      const platform = new H.service.Platform({\r\n          apikey: \"3H10rLgR14JItkoy62qrTqFjcF4rFMfM6G_ZIaNKPk0\"\r\n      });\r\n\r\n  \r\n      const defaultLayers = platform.createDefaultLayers();\r\n  \r\n      const map = new H.Map(\r\n        this.mapRef.current,\r\n        defaultLayers.vector.normal.map,\r\n        {\r\n          center: { lat: 50, lng: 5 },\r\n          zoom: 4,\r\n          pixelRatio: window.devicePixelRatio || 1\r\n        }\r\n      );\r\n        \r\n      // MapEvents enables the event system\r\n      // Behavior implements default interactions for pan/zoom (also on mobile touch environments)\r\n      // This variable is unused and is present for explanatory purposes\r\n      const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\r\n  \r\n      // Create the default UI components to allow the user to interact with them\r\n      // This variable is unused\r\n      const ui = H.ui.UI.createDefault(map, defaultLayers);\r\n      map.setCenter({lat:22.9734, lng:78.6569});\r\n      function addMarkersToMap(map,coords) {\r\n        var Marker = new H.map.Marker({lat:coords.lat.toFixed(4), lng:coords.lng.toFixed(4)});\r\n        map.addObject(Marker);\r\n      }\r\n      function setUpClickListener(map) {\r\n        // Attach an event listener to map display\r\n        // obtain the coordinates and display in an alert box.\r\n        map.addEventListener('tap', function (evt) {\r\n          var coord = map.screenToGeo(evt.currentPointer.viewportX,\r\n                  evt.currentPointer.viewportY);\r\n              wp_arr.push({'Latitude': Math.abs(coord.lat.toFixed(4))+\r\n              ((coord.lat > 0) ? 'N' : 'S'),\r\n              'Longitude': Math.abs(coord.lng.toFixed(4)) +\r\n               ((coord.lng > 0) ? 'E' : 'W')});\r\n          console.log(wp_arr);\r\n          addMarkersToMap(map,coord);\r\n        });\r\n      }\r\n\r\n\r\n      setUpClickListener(map);\r\n\r\n\r\n\r\n\r\n\r\n      this.setState({ map });\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.state.map.dispose();\r\n    }\r\n  \r\n    render() {\r\n      return <div ref={this.mapRef} style={{ height: \"500px\" }} />;\r\n    }\r\n  }\r\n","import './App.css';\r\nimport {DisplayMapClass} from './components/DisplayMapClass';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DisplayMapClass />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}